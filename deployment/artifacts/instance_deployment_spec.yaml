version: 1.0
component: deployment
shell: bash
env:
  variables:
    # Local variables
  vaultVariables:
    # Vault variables
files:
  # This section is to define how the files in the artifact shall
  # be put on the compute instance
  - source: /
    destination: /tmp/
steps:
  # This section is to define the scripts that each step shall run on the instance after file copy.
  - stepType: Command
    name: Install OCI CLI
    command: |
      cd ~
      python3 -m pip install --user oci-cli
    timeoutInSeconds: 5000
    shell: bash
    onFailure:
      - stepType: Command
        name: "Failure Handling"
        timeoutInSeconds: 1200
        command: |
          echo "Handled failure"
  - stepType: Command
    name: Stop currently-running application
    command: |
      echo quien soy `whoami`
      whoami
      pid_count=`ps -fe |grep openshift-test-0.0.1-SNAPSHOT.jar | grep -v grep | wc -l`
      pid=`ps -fe |grep openshift-test-0.0.1-SNAPSHOT.jar | grep -v grep |awk '{print $2}'`
      echo pid es $pid
      echo pid_count es $pid_count
      if [[ $pid_count == 1 ]]  ; then echo entree && kill -9 $pid ; fi
    runAs: root
    timeoutInSeconds: 600
  
  - stepType: Command
    name: Clean old version of source code in prod directory
    command: |
      echo "Perform suitable cleanup"
      ls -ltr /tmp/
    timeoutInSeconds: 600
  
  - stepType: Command
    name: "Install local JDK17"
    timeoutInSeconds: 10000
    command: |
      cd ~
      mkdir InstalledSoftware
      cd InstalledSoftware
      wget -q https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz
      tar xf *tar.gz
      rm *tar.gz
      ls -l
      export JAVA_HOME=`echo -n ~/InstalledSoftware/jdk-*`
      export PATH=$JAVA_HOME/bin:$PATH
      echo Path is
      echo $PATH
      echo JAVA_HOME is
      echo $JAVA_HOME
      java -version
      cd ~
      export OCI_CLI_AUTH=instance_principal
      export PATH=$PATH:~/.local/bin/
      oci artifacts generic artifact download-by-path --repository-id ${ARTIFACT_REPO_OCID} --artifact-path ${ARTIFACT_NAME} --artifact-version ${APPLICATION_VERSION} --file openshift-test-0.0.1-SNAPSHOT.jar
      echo donde estoy `pwd`
      echo que tengo
      ls -ltr 
      echo version java `java --version`
      echo quien soy `whoami`
      sudo firewall-cmd --permanent --zone=public --add-service=http
      sudo firewall-cmd --permanent --zone=public --add-port=8090/tcp
      sudo systemctl restart firewalld
      echo Listo para ejectur la aplicacion
      nohup java -jar openshift-test-0.0.1-SNAPSHOT.jar &
    timeoutInSeconds: 5000
    shell: bash
    onFailure:
      - stepType: Command
        name: "Failure Handling"
        timeoutInSeconds: 1200
        command: |
          echo "Handled failure"